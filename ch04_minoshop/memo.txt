PWA - Progressive Web Application
HTML, CSS, JavaScript 를 이용해서 만든 웹앱을 모던한 웹브라우저 APIs와 결합해서
크로스 플랫폼에서 동작하는 어플리케이션을 손쉽게 만들수 있다.

강력한 웹어플리케이션에 대한 컨셉은

처음 아이폰이 출시될때 스티브 잡스에 의해 등장했다.
웹코드로 어플리케이션을 만드는 장점으로는 별도의 SDK가 필요하지 않고 다음 버전의 어플리케이션을 재배포할 때도 복잡한 철자를 거치지 않아도 되고
한번 웹코드를 작성하기만 하면 다양한 플랫폼에 동시에 출시할 수 있는 장점이 있다. 그래서 스티브 잡스는 강력한 웹 어플리케이션을 지지하면서 이것을 하겠노라고 약속을 했지만
----------------------------------------------------------------------------------------------------------------------------------------------------------------
우리가 모바일에서 앱을 만드는 엄청난 획기적인 방법을 찾았습니다. 아이폰에 사파리 브라우저가 있기 때문에 이 획기적인 방법이 가능합니다. AJAX를 이용한 Web 2.0 웹코드만 작
성하면 됩니다. 그럼, 아이폰에서 앱처럼 보이고, 앱처럼 동작하게 됩니다. 그 앱은 아이폰 서비스들도 잘 사용할 수 있을 것입니다. 전화도 걸 수 있고 이메일도 보낼 수 있고 구글
맵에서 위치 정보도 확인이 가능할 것입니다........
----------------------------------------------------------------------------------------------------------------------------------------------------------------
하지만 얼마 지나지 않아 강력한 웹어플리케이션과는 정반대되는 애플의 수백만 달러의 수익을 가져다 줄 수 있는 앱스토어를 채택해서 앱스토어를 밀게 됩니다.

그리고 2015년 크롬의 개발자 알렉스와 디자이너 플렌시스가 처음으로 새로운 클래스의 웹 어플리케이션에 대해서 언급하면서 PWA라는 단어가 공식적으로 나오게 되고, 이 PWA라는 
웹코드를 이용해서 모든 플랫폼에서 동작하는 어플리케이션을 만들기 위한 조건들 퀄리티들에 대해서 정의하고 나열하기 시작합니다. 

모던한 웹 테크놀러지를 이용해서 만드는 어플리케이션은 

컨텐츠가 유동적으로 반응 할 수 있는, 웹 uI 요소가 보여지는 기기별로 반응적으로 표기가 되도록 할 것 (responsive web design)
서비스 워커를 이용할 것(service workers)
웹앱 manifest를 사용할 것(app manifest)
푸쉬 노티피케이션을 사용 할 것(push notification)
사용자들이 네이티브어플리케이션을 사용하는 것처럼 느낄수 있도록 다양한 브라우저 API를 이용하여 구현하도록 할 것
그리고 PWA의 핵심 포인트인 사용자들의 디바이스에 설치가 가능하도록 만들 것

이런 조건들을 나열하기 시작합니다.

지금 2021년으로 돌아와서 최근 근황을 살펴 볼까요?

유튜브와 유튜브뮤직 둘다 PWA로 설치가 가능하고 스파리파이는 스파리파이플레이어가 PWA로 사용 가능 합니다. 트위터는 트위터 라이트 PWA로 기존의 웹사이트 대체해서 사용하고
있고 윈도우 앱스토어에서 페이스북을 설치하면 PWA인걸 확인할 수 있다. 이거 외에도 틱톡, 틴더, 핀터레스트, 스타벅스등 많은 기업들이 PWA를 사용하고 있습니다. 마이크로소프트
와 구글에서 각각 그들의 앱스토어에서 네이티브앱 뿐만 아니라 PWA에 배포를 수락한다고 한지 꽤 되었고요 특히 마이크로소프트는 PWA를 윈도우 앱스토어에 배포하라고 적극적으로
홍보하고 있다. 삼성도 갤럭시 앱스토어에 PWA를 배포를 할수 있다고 얘기를 했구요 요즘 PWA는 그 어느때보다 더 많은 강력한 플랫폼 API를 제공하고 있다.

구글과 마이크로소프트, 인텔에서 야심차게 함께 진행하는 Project Fugu는 web capabilities project로 알려져 있다. 어떻게하면 브라우저 API를 통해서 플랫폼에서 필요한 파일접근
카메라제어, 클립보드접근, 연락처, 자동으로 런칭하는등 다양한 기능을 할 수 있도록 할 건지 활발하게 개발하고 있고 구글에서도 다양한 기업들에게 적극적으로 접근해서 PWA를 홍보
하고 있고 PWA로 전환하기 위해서 필요한 API가 무엇이 있는지 활발하게 물어보고 의논하고 있습니다.

PWA가 기존의 코더바나 일랙트론으로 만들었던 하이브리드 앱(Hybrid App) 개발에 있었던 여러가지 제약사항들에 대해서 더 나은 다양한 솔루션들을 제공하고 있습니다. 


capabilities
|  
|  native apps
|
|           PWA
|
|           Web App
ㅡㅡㅡㅡㅡㅡㅡㅡ reach


하지만 분명히 PWA도 제약사항이 아직 많이 있다.

새롭게 추가되는 브라우저 API들은 특정브라우저나 예전브라우저 버전에는 사용할수 없고 Mozila 사의 firefox는 데스크탑용 브라우저에서는 PWA를 지원하지 않고 안드로이드에서만
지원 한다. 그리고 아직 apple store에서는 수익관련 문제 때문에 PWA를 거부하고 있다. 하지만 safari를 통하여 PWA를 설치할 수 있다. 그리고 네이티비 앱처럼 모든 플랫폼의 API
를 사용할 수 없어서 완전히 네이티브 앱처럼 만들기에는 많은 제약사항이 존재한다. 그래도 이 간격을 줄여나가려는 노력들이 활발히 진행 중입니다. 그리고 크롬이 브라우저 시장을
크게 차지하고 있고 IE의 종료로 인해서 PWA의 무한한 가능성을 기대해 볼 수 있다. 

아름다운 PWA를 만들기위한 다양한 도구들이 있다.

1.PWA builder
- https://www.pwabuilder.com/
마이크로소프트사에서 만든 오픈소스 프로잭트로 웹사이트를 PWA로 전환할때 어떤지 검토해주고 빠진부분을 자동으로 채워주면서 PWA로 심플하게 만들수 있게 도와준다.

2.Workbox
- https://developers.google.com/web/tools/workbox
구글이 다양한 PWA를 위한 서비스 워커를 자동으로 만들어주는 라이브러리를 만들어주고 있다.

3.Maskable
- https://maskable.app/
더 나은 PWA의 사용성을 위한 어댑티브 아이콘을 디자인 할 수 있는 툴이다.


PWA를 만들기 위해서는 총 4가지가 필요하다.
1.웹코드로 만든 웹사이트나 웹어플리케이션이 있어야 한다.
2.HTTPS를 이용해서 서비스가 제공이 되어야 한다.
3.application manifest가 있어야 한다.(josn 포맺)
4.service worker가 있어야 한다.(자바스크립트로 작성할 수 있는 스크립트 서버와 요청을 관리)


영상 참조

https://www.youtube.com/watch?v=FEBkne7Nyu4

